{"ast":null,"code":"class codes {\n  constructor() {\n    // const\n    this.code1 = \"#ifndef FOO_BAR_BAZ_H_\\n\" + \"#define FOO_BAR_BAZ_H_\\n\" + \"\\n\" + \"...\\n\" + \"\\n\" + \"#endif  // FOO_BAR_BAZ_H_\";\n    // const\n    this.code2 = \"// In a C++ source file:\\n\" + \"class B;\\n\" + \"void FuncInB();\\n\" + \"extern int variable_in_b;\\n\" + \"ABSL_DECLARE_FLAG(flag_in_b);\\n\";\n    this.code3 = \"// b.h:\\n\" + \"struct B {};\\n\" + \"struct D : B {};\\n\" + \"\\n\" + \"// good_user.cc:\\n\" + \"#include \\\"b.h\\\"\\n\" + \"void f(B*);\\n\" + \"void f(void*);\\n\" + \"void test(D* x) { f(x); }  // Calls f(B*)\";\n    this.code4 = \"#include \\\"base/logging.h\\\"\";\n    this.code5 = \"#include \\\"foo/server/fooserver.h\\\"\\n\" + \"\\n\" + \"#include <sys/types.h>\\n\" + \"#include <unistd.h>\\n\" + \"\\n\" + \"#include <string>\\n\" + \"#include <vector>\\n\" + \"\\n\" + \"#include \\\"base/basictypes.h\\\"\\n\" + \"#include \\\"foo/server/bar.h\\\"\\n\" + \"#include \\\"third_party/absl/flags/flag.h\\\"\\n\";\n    this.code6 = \"#include \\\"foo/public/fooserver.h\\\"\\n\" + \"\\n\" + \"#include \\\"base/port.h\\\"  // For LANG_CXX11.\\n\" + \"\\n\" + \"#ifdef LANG_CXX11\\n\" + \"#include <initializer_list>\\n\" + \"#endif  // LANG_CXX11\\n\";\n  }\n}\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default {\n//     code1,\n//     code2,\n//     code3,\n//     code4,\n//     code5,\n//     code6\n// }\n\nexport default codes;","map":{"version":3,"names":["codes","constructor","code1","code2","code3","code4","code5","code6"],"sources":["/Users/picsartacademy/PycharmProjects/untitled/src/codes/cpp.js"],"sourcesContent":["\n\nclass codes {\n\n    // const\n    code1 = \"#ifndef FOO_BAR_BAZ_H_\\n\" +\n        \"#define FOO_BAR_BAZ_H_\\n\" +\n        \"\\n\" +\n        \"...\\n\" +\n        \"\\n\" +\n        \"#endif  // FOO_BAR_BAZ_H_\";\n\n    // const\n    code2 = \"// In a C++ source file:\\n\" +\n        \"class B;\\n\" +\n        \"void FuncInB();\\n\" +\n        \"extern int variable_in_b;\\n\" +\n        \"ABSL_DECLARE_FLAG(flag_in_b);\\n\";\n\n    code3 = \"// b.h:\\n\" +\n        \"struct B {};\\n\" +\n        \"struct D : B {};\\n\" +\n        \"\\n\" +\n        \"// good_user.cc:\\n\" +\n        \"#include \\\"b.h\\\"\\n\" +\n        \"void f(B*);\\n\" +\n        \"void f(void*);\\n\" +\n        \"void test(D* x) { f(x); }  // Calls f(B*)\";\n\n    code4 = \"#include \\\"base/logging.h\\\"\";\n\n    code5 = \"#include \\\"foo/server/fooserver.h\\\"\\n\" +\n        \"\\n\" +\n        \"#include <sys/types.h>\\n\" +\n        \"#include <unistd.h>\\n\" +\n        \"\\n\" +\n        \"#include <string>\\n\" +\n        \"#include <vector>\\n\" +\n        \"\\n\" +\n        \"#include \\\"base/basictypes.h\\\"\\n\" +\n        \"#include \\\"foo/server/bar.h\\\"\\n\" +\n        \"#include \\\"third_party/absl/flags/flag.h\\\"\\n\";\n\n\n    code6 = \"#include \\\"foo/public/fooserver.h\\\"\\n\" +\n        \"\\n\" +\n        \"#include \\\"base/port.h\\\"  // For LANG_CXX11.\\n\" +\n        \"\\n\" +\n        \"#ifdef LANG_CXX11\\n\" +\n        \"#include <initializer_list>\\n\" +\n        \"#endif  // LANG_CXX11\\n\";\n\n\n}\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default {\n//     code1,\n//     code2,\n//     code3,\n//     code4,\n//     code5,\n//     code6\n// }\n\n\nexport default codes;"],"mappings":"AAEA,MAAMA,KAAK,CAAC;EAAAC,YAAA;IAER;IAAA,KACAC,KAAK,GAAG,0BAA0B,GAC9B,0BAA0B,GAC1B,IAAI,GACJ,OAAO,GACP,IAAI,GACJ,2BAA2B;IAE/B;IAAA,KACAC,KAAK,GAAG,4BAA4B,GAChC,YAAY,GACZ,mBAAmB,GACnB,6BAA6B,GAC7B,iCAAiC;IAAA,KAErCC,KAAK,GAAG,WAAW,GACf,gBAAgB,GAChB,oBAAoB,GACpB,IAAI,GACJ,oBAAoB,GACpB,oBAAoB,GACpB,eAAe,GACf,kBAAkB,GAClB,2CAA2C;IAAA,KAE/CC,KAAK,GAAG,6BAA6B;IAAA,KAErCC,KAAK,GAAG,uCAAuC,GAC3C,IAAI,GACJ,0BAA0B,GAC1B,uBAAuB,GACvB,IAAI,GACJ,qBAAqB,GACrB,qBAAqB,GACrB,IAAI,GACJ,kCAAkC,GAClC,iCAAiC,GACjC,8CAA8C;IAAA,KAGlDC,KAAK,GAAG,uCAAuC,GAC3C,IAAI,GACJ,gDAAgD,GAChD,IAAI,GACJ,qBAAqB,GACrB,+BAA+B,GAC/B,yBAAyB;EAAA;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeP,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}