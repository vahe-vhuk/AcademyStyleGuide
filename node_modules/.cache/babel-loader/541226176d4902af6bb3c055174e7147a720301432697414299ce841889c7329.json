{"ast":null,"code":"const code1 = \"#ifndef FOO_BAR_BAZ_H_\\n\" + \"#define FOO_BAR_BAZ_H_\\n\" + \"\\n\" + \"...\\n\" + \"\\n\" + \"#endif  // FOO_BAR_BAZ_H_\";\nconst code2 = \"// In a C++ source file:\\n\" + \"class B;\\n\" + \"void FuncInB();\\n\" + \"extern int variable_in_b;\\n\" + \"ABSL_DECLARE_FLAG(flag_in_b);\\n\";\nconst code3 = \"// b.h:\\n\" + \"struct B {};\\n\" + \"struct D : B {};\\n\" + \"\\n\" + \"// good_user.cc:\\n\" + \"#include \\\"b.h\\\"\\n\" + \"void f(B*);\\n\" + \"void f(void*);\\n\" + \"void test(D* x) { f(x); }  // Calls f(B*)\";\nconst code4 = \"#include \\\"base/logging.h\\\"\";\nconst code5 = \"#include \\\"foo/server/fooserver.h\\\"\\n\" + \"\\n\" + \"#include <sys/types.h>\\n\" + \"#include <unistd.h>\\n\" + \"\\n\" + \"#include <string>\\n\" + \"#include <vector>\\n\" + \"\\n\" + \"#include \\\"base/basictypes.h\\\"\\n\" + \"#include \\\"foo/server/bar.h\\\"\\n\" + \"#include \\\"third_party/absl/flags/flag.h\\\"\\n\";\nconst code6 = \"#include \\\"foo/public/fooserver.h\\\"\\n\" + \"\\n\" + \"#include \\\"base/port.h\\\"  // For LANG_CXX11.\\n\" + \"\\n\" + \"#ifdef LANG_CXX11\\n\" + \"#include <initializer_list>\\n\" + \"#endif  // LANG_CXX11\\n\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  code1,\n  code2,\n  code3,\n  code4,\n  code5,\n  code6\n};","map":{"version":3,"names":["code1","code2","code3","code4","code5","code6"],"sources":["/Users/picsartacademy/PycharmProjects/untitled/src/codes/cpp.js"],"sourcesContent":["\n\n\n\nconst code1 = \"#ifndef FOO_BAR_BAZ_H_\\n\" +\n    \"#define FOO_BAR_BAZ_H_\\n\" +\n    \"\\n\" +\n    \"...\\n\" +\n    \"\\n\" +\n    \"#endif  // FOO_BAR_BAZ_H_\";\n\nconst code2 = \"// In a C++ source file:\\n\" +\n    \"class B;\\n\" +\n    \"void FuncInB();\\n\" +\n    \"extern int variable_in_b;\\n\" +\n    \"ABSL_DECLARE_FLAG(flag_in_b);\\n\";\n\nconst code3 = \"// b.h:\\n\" +\n    \"struct B {};\\n\" +\n    \"struct D : B {};\\n\" +\n    \"\\n\" +\n    \"// good_user.cc:\\n\" +\n    \"#include \\\"b.h\\\"\\n\" +\n    \"void f(B*);\\n\" +\n    \"void f(void*);\\n\" +\n    \"void test(D* x) { f(x); }  // Calls f(B*)\";\n\nconst code4 = \"#include \\\"base/logging.h\\\"\";\n\nconst code5 = \"#include \\\"foo/server/fooserver.h\\\"\\n\" +\n    \"\\n\" +\n    \"#include <sys/types.h>\\n\" +\n    \"#include <unistd.h>\\n\" +\n    \"\\n\" +\n    \"#include <string>\\n\" +\n    \"#include <vector>\\n\" +\n    \"\\n\" +\n    \"#include \\\"base/basictypes.h\\\"\\n\" +\n    \"#include \\\"foo/server/bar.h\\\"\\n\" +\n    \"#include \\\"third_party/absl/flags/flag.h\\\"\\n\";\n\n\nconst code6 = \"#include \\\"foo/public/fooserver.h\\\"\\n\" +\n    \"\\n\" +\n    \"#include \\\"base/port.h\\\"  // For LANG_CXX11.\\n\" +\n    \"\\n\" +\n    \"#ifdef LANG_CXX11\\n\" +\n    \"#include <initializer_list>\\n\" +\n    \"#endif  // LANG_CXX11\\n\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    code1,\n    code2,\n    code3,\n    code4,\n    code5,\n    code6\n}\n\n"],"mappings":"AAIA,MAAMA,KAAK,GAAG,0BAA0B,GACpC,0BAA0B,GAC1B,IAAI,GACJ,OAAO,GACP,IAAI,GACJ,2BAA2B;AAE/B,MAAMC,KAAK,GAAG,4BAA4B,GACtC,YAAY,GACZ,mBAAmB,GACnB,6BAA6B,GAC7B,iCAAiC;AAErC,MAAMC,KAAK,GAAG,WAAW,GACrB,gBAAgB,GAChB,oBAAoB,GACpB,IAAI,GACJ,oBAAoB,GACpB,oBAAoB,GACpB,eAAe,GACf,kBAAkB,GAClB,2CAA2C;AAE/C,MAAMC,KAAK,GAAG,6BAA6B;AAE3C,MAAMC,KAAK,GAAG,uCAAuC,GACjD,IAAI,GACJ,0BAA0B,GAC1B,uBAAuB,GACvB,IAAI,GACJ,qBAAqB,GACrB,qBAAqB,GACrB,IAAI,GACJ,kCAAkC,GAClC,iCAAiC,GACjC,8CAA8C;AAGlD,MAAMC,KAAK,GAAG,uCAAuC,GACjD,IAAI,GACJ,gDAAgD,GAChD,IAAI,GACJ,qBAAqB,GACrB,+BAA+B,GAC/B,yBAAyB;;AAE7B;AACA,eAAe;EACXL,KAAK;EACLC,KAAK;EACLC,KAAK;EACLC,KAAK;EACLC,KAAK;EACLC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}